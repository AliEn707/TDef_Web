#!/bin/bash

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
#rvm use ruby-railsexpress

RAILS_S_ROOT_DIR=/home/osuser/TDef_Web

RAILS_PID=/tmp/rails_server.pid

export RAILS_ENV=production
export RUBY_GC_HEAP_FREE_SLOTS=200000
export RUBY_GC_MALLOC_LIMIT=60000000

#export RAILS_WEBSERV=thin
#export MEMSTORE_SIZE=384 
#export USE_OJ=true 

export RAILS_PEPPER=""
export RAILS_SECRET=""
export RECAPCHA_PUBLIC_KEY=""
export RECAPCHA_PRIVATE_KEY=""
export RAILS_LOG_MAIL=""
export RAILS_MAIL_PASSWORD=""


export UPDATE_DB=0 
export NOT_COMPILE_ASSETS=1

CHILD_NODES=""

function child_nodes(){
	for i in $CHILD_NODES; do
		ssh osuser@$i rails_server $1
	done
}

function cp_assets(){
        for i in $CHILD_NODES; do
                ssh osuser@$i rm -rf TDef_Web/public/assets
                scp -r public/assets osuser@$i:~/TDef_Web/public
        done
}

function rails() {
  if [ "$1" = "start" ]; then
     bundle exec rails server -d --pid=$RAILS_PID
     return 0
  elif [ "$1" = "stop" ]; then
     if [ -f $RAILS_PID ]; then
        kill $2 $(cat $RAILS_PID)
	rm $RAILS_PID
	echo "server stopped"
#        return 0
     else
        echo "It seems there is no server running"
#        return 1
     fi
     return 0
  elif [ "$1" = "restart" ]; then
     rails stop 
     rails start $2
  elif [ "$1" = "assets" ]; then
     bundle exec rake assets:precompile assets:clean
     cp_assets
  elif [ "$1" = "check" ]; then
      if [ -f $RAILS_PID ]; then
        RESULT=$(ps -A|grep $(cat $RAILS_PID)|head -1)
        if [ -z "$RESULT" ]; then
	  rm $RAILS_PID
          rails start
          echo "restarting"
          return 1
        fi
      fi
      echo "all Ok"
      return 0
 elif [ "$1" = "update" ]; then
     rails stop
     bash update.sh
     child_nodes stop
	 cp_assets
     child_nodes update
  else
     bundle exec $@
  fi;
}


cd $RAILS_S_ROOT_DIR
rails $@